version: '3.9'

volumes:
  media:
  static:
  gp-postgres_data:
  redis_data:
  portainer_data:

networks:
  gp-net:
    driver: bridge

services:
  gp-rest-server:
    container_name: gp-rest-server
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/gamerpro
      - media:/media
    env_file:
      - ./.env.dev
    ports:
      - "8008:8000"
#    depends_on:
#      - redis
#      - postgres
#      - celery-worker
    networks:
      - gp-net
#    command: sh -c "python manage.py collectstatic --noinput --clear"

  gp-bot:
    container_name: gp-bot
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.bot
    command: python apps/bot/launcher.py
    volumes:
      - .:/gamerpro
    env_file:
      - ./.env.dev
    depends_on:
      - gp-postgres
    networks:
      - gp-net

  gp-tgauth-bot:
    container_name: gp-tgauth-bot
    restart: always
    build:
      context: .
      dockerfile: ./telegram_auth/dockerfile
    volumes:
      - ./telegram_auth:/tgauth_bot
    env_file:
      - ./.env.dev
    depends_on:
      - gp-postgres
    ports:
      - "3113:3113"
    networks:
      - gp-net

  redis:
    container_name: redis
    restart: unless-stopped
    image: redis
    command: redis-server --appendonly yes --replica-read-only no
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    env_file:
      - ./.env.dev
    networks:
      - gp-net

  celery-beat:
    container_name: celery-beat
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/gamerpro
    env_file:
      - ./.env.dev
    depends_on:
      - celery-worker
      - gp-rest-server
    networks:
      - gp-net
    command: "celery -A config.celery_app beat --loglevel=INFO"

  celery-worker:
    container_name: celery-worker
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/gamerpro
    env_file:
      - ./.env.dev
    networks:
      - gp-net
    command: "celery -A config.celery_app worker --loglevel=INFO"

  gp-postgres:
    container_name: gp-postgres
    restart: always
    image: postgres
    volumes:
      - gp-postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=gamerprodb
      - POSTGRES_USER=gamerprodb
      - POSTGRES_PASSWORD=gamerprodb
    ports:
      - "5432:5432"
#    depends_on:
#      - redis
    networks:
      - gp-net

  gp-pgadmin:
    container_name: gp-pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: gamerprodb
    ports:
      - "5555:80"
    networks:
      - gp-net

#  portainer-agent:
#    container_name: portainer-agent
#    restart: always
#    image: portainer/agent
#    environment:
#      AGENT_PORT: 9001
#      LOG_LEVEL: DEBUG
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#      - /var/lib/docker/volumes:/var/lib/docker/volumes
#    networks:
#      - gp-net

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    environment:
      - TZ=Asia/Almaty
    ports:
      - "9000:9000"
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always